# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
networks:
  backend-network:  # References external network from backend compose.
      name: tripborder-backend-networkprod  # Actual Docker network name (example value: 'tripborder-backend-network'; matches backend yaml for resolution).
      external: true
  frontend-network: 
      name: tripborder-frontend-networkprod

services:
  nginx:
    build: .
    image: tripborder-frontend:prod
    container_name: tripborder-frontend-prod
    ports:
      - "5174:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/prod.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - backend-network  # Access backend; why: Resolves service names.
      - frontend-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "https://localhost:5174"]  # Probes readiness; fails if no response (why: Ensures Nginx up before traffic).
      interval: 30s  # Check frequency (example: '30s' balances load).
      timeout: 10s  # Max wait (example: '10s' for quick fail).
      retries: 3  # Attempts before unhealthy (example: '3' for resilience).
